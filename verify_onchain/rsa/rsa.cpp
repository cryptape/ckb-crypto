
#include <botan/pubkey.h>
#include <botan/hex.h>
#include <botan/rsa.h>
#include "../include/ckb_syscalls.h"


int main()
{
    std::string text("This is a tasty burger!");
    std::vector<uint8_t> data(text.data(),text.data()+text.length());

    //std::cout << "Signature:" << std::endl << Botan::hex_encode(signature) << std::endl;
    std::string sig_s = "28F03E170E28942697F51BDB409523FD6F68A1635CA4BA184C8E8706FA76AE2D967AE99EA01D7B25EFA0FFD1ED96870AB14D5E59BA196C7A54E98A2BBC5B82EF10CBE79CDF2CFF041E4D66F71992D6FC0EC1460216D248D46EB04F4665B4840E67DDF2467BF8A649E867D634B43CD80E22BAE3BBACEE09F660DC27F23EA4B855C8C5F57D9575FD2121017E55182988D660FF566403F3FC1C3C594EBFD0B6DBE5D354D25423D388BAB1136E3B9967DADFE770A7A31B9F957B0A17ACF392C1F6315AEA577AFC79E399405C6587687F29BEFA80A3C122FF2B914865F8F65CE9ED6E3BDE3721C1150B8CED92C319DF823F92D2A74A5240DF3C9AEA1F863818DAF0B6";


    std::string n_s = "E17A1752E1FCDEECD0361927D12A86A33E832485A4201E494C3F72444FDEB85CBBE8FB47E35EEFA53B344AB5CF3274D77BDCEFE1B659F420F631CED861E89D6745213994E12FBE44DE7F59CC5BEDD5F8C2CD3516EF6D3EFD4F830960BF61B9E45DFFAFCE5B9D31F4A974B4AC138E245700E3D6EB970BDFF199EF0114A1526B2C54545BCEA08A6DF19FCF78A3B1DE69ED5289F630EFC04996D1E6B5CA5CE028EBA95A9E1D11DEFC8BF13AD49FA87AD334A0A1042BCFADB27B3AB3D825EB0E4C0551B23ADA9326F38C96FC00C82DAE7FF102F77CB2065DB82FD401613F1C6714A8C8B93F1A9A59FFEBE9AD3A98257F0854476C20F2F7A1EF6ACD9A410E01FEB961";
    std::string e_s = "010001";


    Botan::BigInt pub_n(Botan::hex_decode(n_s));
    Botan::BigInt pub_e(Botan::hex_decode(e_s));
    Botan::RSA_PublicKey pub_key(pub_n,pub_e);

    // verify signature
    Botan::PK_Verifier verifier(pub_key, "EMSA1(SHA-256)");
    verifier.update(data);
    int result = verifier.check_signature(Botan::hex_decode(sig_s));
    if (result)
    {
        ckb_exit (0);
    }

    ckb_exit (1);
}









